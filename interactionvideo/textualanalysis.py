"""
Dictionary-based textual analysis to get verbal measures
(e.g., verbal positive, negative, warmth, ability)

Use Loughran-McDonald (2011,2016) Finance Dictionary (LM)
to get Positive and Negative

For more details, please check
https://sraf.nd.edu/textual-analysis/resources/

Use Nicolas, Bai, and Fiske (2019) Social Psychology Dictionary (NBF)
to get Warmth and Ability

For more details, please check
https://psyarxiv.com/afm8k/

"""
from os.path import join

import pandas as pd


def clean_token(token):
    
    import re
    # Remove all ending punctuations
    # Split 's 're 'll and intra hyphen 
    token_list = re.findall('\w+', token)
    
    # Drop 's 're 'll (may be incomplete) and upper case
    token_list = [each.upper()  for each in token_list if each not in ['s','re','ll']]
    
    # Keep the longer part only
    token_list.sort(key=len,reverse=True)
        
    return token_list[0]

def process_text_by_dict(work_path, dict_path):
    """
    Merge text panel with LM and NBF dictionaries
    Get verbal positive, negative, warmth, ability
    For more details, please check
    LM: https://sraf.nd.edu/textual-analysis/resources/
    NBF: https://psyarxiv.com/afm8k/
    Args:
        work_path (str): path to the work folder
        dict_path (str): path to the LM and NBF combined dictionary
    """
    
    # Set the audio_temp and result_temp path
    ResultTempPath = join(work_path,'result_temp')

    # Load the dictionary
    LM_NBF_DictDF = pd.read_csv(dict_path)
    
    print('LM and NBF Dictionaries loaded.' + '\n' )
    
    # Load the text panel generated by Speech2Text
    text_result_df = pd.read_csv(join(ResultTempPath,'text_panel_google.csv'))
    
    print('Dictionary-based textual analysis begins. %s words to process.' \
          %(len(text_result_df)) + '\n' )
    
    # Clean the text in the text panel
    text_result_df['Word'] = [clean_token(each) for each in text_result_df['Text']]
    
    # Merge with dictionary
    text_result_df = pd.merge(left=text_result_df, right=LM_NBF_DictDF,\
                              on=['Word'], how='left')
    
    # Keep relevant columns
    text_result_df.drop(columns=['Word','Word Lemma','Word Stem'], inplace=True)
    
    # Fill missing values (words not in dictionary)
    text_result_df.fillna(0, inplace=True)
    
    # Rename columns
    text_result_df.rename(columns={'Negative':'Verbal-Negative',\
                                   'Positive':'Verbal-Positive',\
                                   'Warmth Direction':'Verbal-Warmth',\
                                   'Ability Direction':'Verbal-Ability'},\
                         inplace = True)
    
    # Save the Panel
    text_result_df.to_csv(join(ResultTempPath,'text_panel.csv'), encoding='utf-8',\
                         sep=',',float_format='%.2f',index=False)
    
    print('Dictionary-based textual analysis ends. %s words processed.' \
          %(len(text_result_df)) + '\n' )
    
    return text_result_df



    